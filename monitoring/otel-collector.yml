receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048

  resource:
    attributes:
      - key: deployment.environment
        value: "docker"
        action: insert

  # Add correlation ID propagation
  transform:
    trace_statements:
      - context: span
        statements:
          - set(span.attributes["correlation.id"], span.trace_id.string) where span.attributes["correlation.id"] == nil

exporters:
  # Use OTLP exporter for Jaeger (modern approach)
  otlp/jaeger:
    endpoint: jaeger:4317
    tls:
      insecure: true

  prometheus:
    endpoint: "0.0.0.0:8889"
    const_labels:
      environment: docker

  # Use debug exporter instead of deprecated logging
  debug:
    verbosity: detailed

  # Loki exporter for logs
  loki:
    endpoint: "http://loki:3100/loki/api/v1/push"

extensions:
  health_check:
    endpoint: 0.0.0.0:13133

  pprof:
    endpoint: 0.0.0.0:1777

  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [resource, transform, batch]
      exporters: [otlp/jaeger, debug]

    metrics:
      receivers: [otlp]
      processors: [resource, batch]
      exporters: [prometheus, debug]

    logs:
      receivers: [otlp]
      processors: [resource, batch]
      exporters: [loki, debug]

  telemetry:
    logs:
      level: debug
      initial_fields:
        service: otel-collector
