apiVersion: 1

deleteDatasources:
  - name: Prometheus
    orgId: 1
  - name: ClickHouse
    orgId: 1
  - name: Jaeger
    orgId: 1

datasources:
  # Prometheus - Metrics
  - name: Prometheus
    type: prometheus
    access: proxy
    orgId: 1
    url: http://prometheus:9090
    basicAuth: false
    isDefault: true
    version: 1
    editable: true
    jsonData:
      httpMethod: POST
      queryTimeout: 60s
      timeInterval: 15s
      exemplarTraceIdDestinations:
        - name: traceID
          datasourceUid: jaeger-uid
          urlDisplayLabel: 'View Trace'

  # ClickHouse - Logs
  - name: ClickHouse
    type: grafana-clickhouse-datasource
    access: proxy
    orgId: 1
    uid: clickhouse-uid
    url: http://clickhouse:8123
    basicAuth: false
    isDefault: false
    version: 1
    editable: true
    jsonData:
      server: clickhouse
      port: 8123
      username: default
      defaultDatabase: logs
      protocol: http
      secure: false
      tlsSkipVerify: true
      queryTimeout: 30
      dialTimeout: 10
      logs:
        defaultTable: application_logs
        defaultDatabase: logs
        otelEnabled: true
        otelVersion: v1
        timeColumn: timestamp
        levelColumn: level
        messageColumn: message
        traceIdColumn: trace_id
        spanIdColumn: span_id
        serviceNameColumn: service_name
    secureJsonData:
      password: clickhouse123

  # Jaeger - Distributed Tracing
  - name: Jaeger
    type: jaeger
    access: proxy
    orgId: 1
    uid: jaeger-uid
    url: http://jaeger:16686
    basicAuth: false
    isDefault: false
    version: 1
    editable: true
    jsonData:
      tracesToLogs:
        datasourceUid: 'clickhouse-uid'
        tags: ['job', 'instance', 'pod', 'namespace']
        mappedTags: [
          { key: 'service.name', value: 'service' },
          { key: 'service.namespace', value: 'namespace' }
        ]
        mapTagNamesEnabled: false
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
        filterByTraceID: false
        filterBySpanID: false
      tracesToMetrics:
        datasourceUid: 'prometheus-uid'
        tags: [
          { key: 'service.name', value: 'service' },
          { key: 'job' }
        ]
        queries: [
          {
            name: 'Sample query',
            query: 'sum(rate(tempo_spanmetrics_latency_bucket{$__tags}[$__interval])) by (le)'
          }
        ]
      nodeGraph:
        enabled: true
      search:
        hide: false
      spanBar:
        type: 'Tag'
        tag: 'http.path'

  # Alertmanager - Alerts
  - name: Alertmanager
    type: alertmanager
    access: proxy
    orgId: 1
    url: http://alertmanager:9093
    basicAuth: false
    isDefault: false
    version: 1
    editable: true
    jsonData:
      implementation: prometheus
